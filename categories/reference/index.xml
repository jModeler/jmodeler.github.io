<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference on The Journeyman Modeler</title><link>http://jmodeler.github.io/categories/reference/</link><description>Recent content in Reference on The Journeyman Modeler</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 11 Aug 2023 09:21:55 -0400</lastBuildDate><atom:link href="http://jmodeler.github.io/categories/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Making Terminal in RStudio Cooler (via ohmyzsh)</title><link>http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/</guid><description>I&amp;rsquo;ve been using ohmyzsh with the powerlevel10k theme to enhance my terminal experience, as I find myself spending more time on it while working on a few projects. A screeshot of this &amp;ldquo;enhanced&amp;rdquo; terminal is shown below: I was wondering if I could get the terminal within RStudio to use the same theme. Turns out that can be done, by following the steps below (Note that these steps are applicable to RStudio version 2022.</description></item><item><title>Resolving Errors When Loading the lldb Debugger</title><link>http://jmodeler.github.io/posts/resolving-errors-when-loading-the-lldb-debugger/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-errors-when-loading-the-lldb-debugger/</guid><description>From time to time, I work with C code, and I use the lldb debugger to step through the code. Recently, after a Mac OS update, I started seeing this error when attempting to start the lldb debugger in terminal:
$ lldb Traceback (most recent call last): File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/usr/local/Cellar/llvm/15.0.7_1/libexec/python3.11/site-packages/lldb/__init__.py&amp;#34;, line 96, in &amp;lt;module&amp;gt; import six ModuleNotFoundError: No module named &amp;#39;six&amp;#39; The error message says that a module (six) is missing.</description></item><item><title>Resolving Install Errors for the lightweight_mmm Python Package</title><link>http://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/</guid><description>To experiment with different specifications of a marketing mix model, I tried installing the lightweight_mmm Python package from Google. When using the standard pip3 install lightweight_mmm command in terminal, I was hitting this error:
× Getting requirements to build wheel did not run successfully. │ exit code: 1 ╰─&amp;gt; [66 lines of output] The Meson build system Version: 0.62.2 Source dir: /private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-install-yc6ribm7/scipy_ae66ccfb8522422ab91e65b44570f273 Build dir: /private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-install-yc6ribm7/scipy_ae66ccfb8522422ab91e65b44570f273/.mesonpy-ur2kyhcf/build Build type: native build Project name: SciPy Project version: 1.</description></item><item><title>Resolving Errors when Creating Your First MineRL Agent</title><link>http://jmodeler.github.io/posts/resolving-errors-when-creating-your-first-minerl-agent/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-errors-when-creating-your-first-minerl-agent/</guid><description>In this post, I lay out the steps to follow to resolve the errors you see when creating your first MineRL agent on a macOS. This is a continuation of this post, which looks at resolving install errors on the minerl package.
I borrow heavily from this github issue comment.
Clone the repository using the terminal command below
git clone https://github.com/minerllabs/minerl.git This will create a minerl directory. Make sure that the path to the cloned repository does not have spaces in it (i.</description></item><item><title>Resolving Install Errors with MineRL</title><link>http://jmodeler.github.io/posts/resolving-install-errors-with-minerl/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-with-minerl/</guid><description>In this post, I&amp;rsquo;ll resolve an error that one might face when trying to install the minerl Python package. The instructions to install this package can be found here.
Using the instructions above, when I used the install command (pip3 install git+https://github.com/minerllabs/minerl), I got the following error (only the relevant part is shown here): Note: Some input files use or override a deprecated API. Note: Recompile with -Xlint:deprecation for details. Note: Some input files use unchecked or unsafe operations.</description></item><item><title>Setting up Python to Run on Rmarkdown</title><link>http://jmodeler.github.io/posts/setting-up-python-to-run-on-rmarkdown/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/setting-up-python-to-run-on-rmarkdown/</guid><description>I use the Hugo academic template along with Rstudio’s Blogdown package to generate and deploy this website to github pages. I use this setup to generate blog posts (via Rmarkdown) that render \(\LaTeX\) math and output from R code.
Sometimes, I’d like to run Python code inside Rmarkdown too, and this is supported, via the reticulate package. That said, the following steps need to be followed to make sure everything runs smoothly (all of these steps worked on a macOS Ventura operating system)</description></item></channel></rss>