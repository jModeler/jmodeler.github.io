<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Setup | The Journeyman Modeler</title><link>https://jmodeler.github.io/tag/setup/</link><atom:link href="https://jmodeler.github.io/tag/setup/index.xml" rel="self" type="application/rss+xml"/><description>Setup</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 23 Mar 2023 00:00:00 +0000</lastBuildDate><image><url>https://jmodeler.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Setup</title><link>https://jmodeler.github.io/tag/setup/</link></image><item><title>Resolving Errors when Creating Your First MineRL Agent</title><link>https://jmodeler.github.io/post/resolving-errors-when-creating-your-first-minerl-agent/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><guid>https://jmodeler.github.io/post/resolving-errors-when-creating-your-first-minerl-agent/</guid><description>
&lt;p>In this post, I lay out the steps to follow to resolve the errors you see when creating your &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/first_agent.html">first MineRL agent&lt;/a> on a macOS. This is a continuation of &lt;a href="https://jmodeler.github.io/post/resolving-install-errors-with-minerl/">this post&lt;/a>, which looks at resolving install errors on the &lt;code>minerl&lt;/code> package.&lt;/p>
&lt;p>I borrow heavily from &lt;a href="https://github.com/minerllabs/minerl/issues/659#issuecomment-1306635414">this github issue comment&lt;/a>.&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>&lt;p>Clone the repository using the terminal command below&lt;/p>
&lt;pre>&lt;code> git clone https://github.com/minerllabs/minerl.git&lt;/code>&lt;/pre>
&lt;p>This will create a &lt;code>minerl&lt;/code> directory. Make sure that the path to the cloned repository does not have spaces in it (i.e. the path should &lt;strong>not&lt;/strong> be &lt;code>/Users/&amp;lt;username&amp;gt;/minerl folder/minerl&lt;/code> – you will get &lt;code>file not found&lt;/code> errors in the next few steps otherwise)&lt;/p>&lt;/li>
&lt;li>&lt;p>Open the patch file in the directory &lt;code>minerl/scripts/mcp_patch.diff&lt;/code>, and replace version number &lt;code>3.2.1&lt;/code> to &lt;code>3.3.1&lt;/code> for &lt;code>lwjgl-opengl&lt;/code> (&lt;a href="https://github.com/minerllabs/minerl/blob/03510486957633676d269bf83115a84499ef7f47/scripts/mcp_patch.diff#L314">github link&lt;/a> to part of the file where the version number should be replaced)&lt;/p>&lt;/li>
&lt;li>&lt;p>From inside the &lt;code>minerl&lt;/code> folder on terminal, run the following command:&lt;/p>
&lt;pre>&lt;code> pip3 install .&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>If the installation fails, please go to this &lt;a href="https://jmodeler.github.io/post/resolving-install-errors-with-minerl/">post&lt;/a> and see if the steps outlined there can help.&lt;/p>&lt;/li>
&lt;li>&lt;p>If the installation is successful, navigate to the &lt;code>minerl/minerl/MCP-Reborn&lt;/code> folder and open the &lt;code>launchClient.sh&lt;/code> file in a text editor of choice. Modify a line close to the end of the file that starts with &lt;code>Java ....&lt;/code>, so that the new line becomes:&lt;/p>
&lt;pre>&lt;code> java -Xmx$maxMem -XstartOnFirstThread -jar $fatjar --envPort=$port&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>Navigate to &lt;code>MCP-Reborn/src/main/java/net/minecraft/client/MainWindow.java&lt;/code>, and make the following changes:&lt;/p>
&lt;ul>
&lt;li>&lt;p>Comment out the following line (add a &lt;code>//&lt;/code> to the left of this line)&lt;/p>
&lt;pre>&lt;code> GLFW.glfwSetWindowIcon(this.handle, buffer);&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>Comment out the body of the &lt;code>checkGlfwError&lt;/code> method, it should look like this after commenting out the body:&lt;/p>
&lt;pre>&lt;code> public static void checkGlfwError(BiConsumer&amp;lt;Integer, String&amp;gt; glfwErrorConsumer) {
/* RenderSystem.assertThread(RenderSystem::isInInitPhase);
try (MemoryStack memorystack = MemoryStack.stackPush()) {
PointerBuffer pointerbuffer = memorystack.mallocPointer(1);
int i = GLFW.glfwGetError(pointerbuffer);
if (i != 0) {
long j = pointerbuffer.get();
String s = j == 0L ? &amp;quot;&amp;quot; : MemoryUtil.memUTF8(j);
glfwErrorConsumer.accept(i, s);
}
} */
}&lt;/code>&lt;/pre>
&lt;p>&lt;strong>DO NOT&lt;/strong> comment out/delete the method declaration, else the next step will fail.&lt;/p>&lt;/li>
&lt;/ul>&lt;/li>
&lt;li>&lt;p>Navigate to the &lt;code>minerl/minerl/MCP-Reborn&lt;/code> folder in terminal and rebuild &lt;code>MCP-Reborn&lt;/code> using the command below:&lt;/p>
&lt;pre>&lt;code> ./gradlew clean build shadowJar&lt;/code>&lt;/pre>
&lt;p>You should see a success message like the one below:
&lt;img src="build_success.png" alt="Build Success" />&lt;/p>&lt;/li>
&lt;li>&lt;p>Find the location where the &lt;code>minerl&lt;/code> package was installed. If you use &lt;code>pyenv&lt;/code> like I do, you can use the &lt;code>pyenv which python&lt;/code> command in terminal, to get the version of python being used by the system. For example, if the version number is &lt;code>3.11.2&lt;/code>, then the location of the &lt;code>minerl&lt;/code> package should be:&lt;/p>
&lt;pre>&lt;code> /Users/&amp;lt;username&amp;gt;/.pyenv/versions/3.11.2/lib/python3.11/site-packages/minerl&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;p>Navigate to the &lt;code>minerl&lt;/code> folder above, and replace the &lt;code>MCP-Reborn&lt;/code> folder in it with the &lt;code>MCP-Reborn&lt;/code> folder you just built in step 7 above.&lt;/p>&lt;/li>
&lt;li>&lt;p>Follow the steps to &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/first_agent.html">build your first agent&lt;/a>, this should work now and you should see something like this:
&lt;img src="first_agent_run.png" alt="First Agent" />&lt;/p>&lt;/li>
&lt;/ol></description></item><item><title>Resolving Install Errors with MineRL</title><link>https://jmodeler.github.io/post/resolving-install-errors-with-minerl/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>https://jmodeler.github.io/post/resolving-install-errors-with-minerl/</guid><description>
&lt;p>In this post, I’ll resolve an error that one might face when trying to install the &lt;code>minerl&lt;/code> Python package. The instructions to install this package can be &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/index.html">found here&lt;/a>.&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>Using the instructions above, when I used the install command (&lt;code>pip3 install git+https://github.com/minerllabs/minerl&lt;/code>), I got the following error (only the relevant part is shown here):&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
100 errors
only showing the first 100 errors, of 2866 total; use -Xmaxerrs if you would like to see more
&amp;gt; Task :compileJava FAILED
FAILURE: Build failed with an exception.
* What went wrong:
Execution failed for task &amp;#39;:compileJava&amp;#39;.
&amp;gt; Compilation failed; see the compiler error output for details.
* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
* Get more help at https://help.gradle.org
Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.
Use &amp;#39;--warning-mode all&amp;#39; to show the individual deprecation warnings.
See https://docs.gradle.org/6.8.1/userguide/command_line_interface.html#sec:command_line_warnings
BUILD FAILED in 21s
10 actionable tasks: 10 executed
Traceback (most recent call last):
File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 2, in &amp;lt;module&amp;gt;
File &amp;quot;&amp;lt;pip-setuptools-caller&amp;gt;&amp;quot;, line 34, in &amp;lt;module&amp;gt;
File &amp;quot;/private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-req-build-9xj7s1on/setup.py&amp;quot;, line 214, in &amp;lt;module&amp;gt;
prep_mcp()
File &amp;quot;/private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-req-build-9xj7s1on/setup.py&amp;quot;, line 198, in prep_mcp
subprocess.check_call(&amp;#39;{} clean build shadowJar&amp;#39;.format(gradlew).split(&amp;#39; &amp;#39;), cwd=workdir)
File &amp;quot;/Users/&amp;lt;username&amp;gt;/.pyenv/versions/3.11.2/lib/python3.11/subprocess.py&amp;quot;, line 413, in check_call
raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command &amp;#39;[&amp;#39;./gradlew&amp;#39;, &amp;#39;clean&amp;#39;, &amp;#39;build&amp;#39;, &amp;#39;shadowJar&amp;#39;]&amp;#39; returned non-zero exit status 1.
[end of output]
note: This error originates from a subprocess, and is likely not a problem with pip.
error: metadata-generation-failed&lt;/code>&lt;/pre>
&lt;ol start="2" style="list-style-type: decimal">
&lt;li>Searching for the error message (&lt;code>error: metadata-generation-failed&lt;/code>) took me to a bunch of websites that provided other options to try:
&lt;ul>
&lt;li>From the &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/index.html">install page&lt;/a>, I tried providing the &lt;code>--user&lt;/code> option in the install command, that did not work, and I got the same error. This was the command I used: &lt;code>pip3 install git+https://github.com/minerllabs/minerl --user&lt;/code>&lt;/li>
&lt;li>From &lt;a href="https://stackoverflow.com/questions/74188013/python-pygame-not-installing">this stackoverflow page&lt;/a>, I used the &lt;code>--pre&lt;/code> option in the install command, that didn’t work either. This was the command I used: &lt;code>pip3 install git+https://github.com/minerllabs/minerl --pre&lt;/code>&lt;/li>
&lt;li>From &lt;a href="https://bobbyhadz.com/blog/python-error-metadata-generation-failed-encountered-error">this page&lt;/a>, I learnt about using the &lt;code>--use-deprecated&lt;/code> option, but that did not work too. This was the command I used: &lt;code>pip3 install git+https://github.com/minerllabs/minerl --use-deprecated=legacy-resolver&lt;/code>&lt;/li>
&lt;/ul>&lt;/li>
&lt;li>Going back to the &lt;code>minerl&lt;/code> &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/index.html">install page&lt;/a>, I checked the Java version, hoping that this was the issue:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> $ java -version
openjdk version &amp;quot;14.0.2&amp;quot; 2020-07-14
OpenJDK Runtime Environment (build 14.0.2+12-46)
OpenJDK 64-Bit Server VM (build 14.0.2+12-46, mixed mode, sharing)&lt;/code>&lt;/pre>
&lt;ol start="4" style="list-style-type: decimal">
&lt;li>My system was using the wrong version of Java (it should be using &lt;code>1.8._&lt;/code>)! I used the &lt;a href="https://gist.github.com/schnell18/bcb9833f725be22f6acd01f94b486392">instructions here&lt;/a>, to remove the other version of Java. These were the exact commands I used:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> $ sudo rm -fr /Library/Java/JavaVirtualMachines/openjdk-14.0.2.jdk/
$ sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin
$ sudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane&lt;/code>&lt;/pre>
&lt;ol start="5" style="list-style-type: decimal">
&lt;li>If you encounter this error on a macOS, and the Java version is the cause, check your Java version using the &lt;code>java -version&lt;/code> command on terminal, and navigate to the &lt;code>/Library/Java/JavaVirtualMachines/&lt;/code> folder to find the other versions of Java on your machine. Then use the &lt;code>sudo&lt;/code> commands above to delete the appropriate folders. After deleting the other Java folder on my machine, typing &lt;code>java -version&lt;/code> in my terminal gave me the following result:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> $ java -version
openjdk version &amp;quot;1.8.0_292&amp;quot;
OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_292-b10)
OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.292-b10, mixed mode)&lt;/code>&lt;/pre>
&lt;ol start="6" style="list-style-type: decimal">
&lt;li>After doing this, the install command (&lt;code>pip3 install git+https://github.com/minerllabs/minerl&lt;/code>), worked fine on the terminal. I did see some error messages (around installation of the Python package &lt;code>gym&lt;/code>), but it didn’t appear to affect the installation:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> Failed to build gym
Installing collected packages: PyWavelets, Pyro4, opencv-python, matplotlib-inline, lxml,
jinja2, jedi, inflection, idna, humanfriendly, flaky, dill, decorator, cloudpickle, charset-normalizer,
certifi, asttokens, stack-data, requests, imagehash, gym, coloredlogs, ipython, minerl
Running setup.py install for gym ... done
DEPRECATION: gym was installed using the legacy &amp;#39;setup.py install&amp;#39;
method, because a wheel could not be built for it. pip 23.1 will enforce this behaviour change.
A possible replacement is to fix the wheel build issue reported above.
Discussion can be found at https://github.com/pypa/pip/issues/8368&lt;/code>&lt;/pre>
&lt;ol start="8" style="list-style-type: decimal">
&lt;li>Create your &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/first_agent.html">first agent&lt;/a> and check if everything is working properly. If the example linked does not work, refer to &lt;a href="https://jmodeler.github.io/post/resolving-errors-when-creating-your-first-minerl-agent/">this post&lt;/a>, or &lt;a href="https://github.com/minerllabs/minerl/issues/659#issuecomment-1306635414">this github issue comment&lt;/a>.&lt;/li>
&lt;/ol></description></item></channel></rss>