<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogdown | The Journeyman Modeler</title><link>https://jmodeler.github.io/tag/blogdown/</link><atom:link href="https://jmodeler.github.io/tag/blogdown/index.xml" rel="self" type="application/rss+xml"/><description>Blogdown</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 21 Mar 2023 00:00:00 +0000</lastBuildDate><image><url>https://jmodeler.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Blogdown</title><link>https://jmodeler.github.io/tag/blogdown/</link></image><item><title>Setting up Python to Run on Rmarkdown</title><link>https://jmodeler.github.io/post/setting-up-python-to-run-on-rmarkdown/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>https://jmodeler.github.io/post/setting-up-python-to-run-on-rmarkdown/</guid><description>
&lt;p>I use the &lt;a href="https://github.com/wowchemy/starter-hugo-academic">Hugo academic template&lt;/a> along with Rstudio’s &lt;a href="https://github.com/rstudio/blogdown">Blogdown&lt;/a> package to generate and deploy this website to &lt;a href="https://pages.github.com/">github pages&lt;/a>. I use this setup to generate blog posts (via &lt;a href="https://rmarkdown.rstudio.com/">Rmarkdown&lt;/a>) that render &lt;span class="math inline">\(\LaTeX\)&lt;/span> math and output from R code.&lt;/p>
&lt;p>Sometimes, I’d like to run Python code inside Rmarkdown too, and this is &lt;a href="https://bookdown.org/yihui/rmarkdown-cookbook/eng-python.html">supported&lt;/a>, via the &lt;a href="https://cran.r-project.org/web/packages/reticulate/index.html">reticulate&lt;/a> package. That said, the following steps need to be followed to make sure everything runs smoothly (all of these steps worked on a macOS Ventura operating system)&lt;/p>
&lt;ol style="list-style-type: decimal">
&lt;li>In your Rmarkdown file, always have this code chunk to setup Python use for later:&lt;/li>
&lt;/ol>
&lt;pre class="r">&lt;code># setup for using python code later in the page
# import the reticulate package
library(reticulate)
# specify the version of python to use
use_python(&amp;quot;/Users/&amp;lt;username&amp;gt;/.pyenv/shims/python&amp;quot;)&lt;/code>&lt;/pre>
&lt;ol start="2" style="list-style-type: decimal">
&lt;li>&lt;p>Note: In the chunk above, replace &lt;code>&amp;lt;username&amp;gt;&lt;/code> with your username. In addition, I use &lt;code>pyenv&lt;/code> to manage python versions on my system, as &lt;a href="https://blog.teclado.com/how-to-use-pyenv-manage-python-versions/">explained here&lt;/a>. If you don’t have &lt;code>pyenv&lt;/code> already, be sure to set it up using the instructions in the previous link.&lt;/p>&lt;/li>
&lt;li>&lt;p>You might hit an error when you insert a code chunk with python code:&lt;/p>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> Error: &amp;#39;/Users/&amp;lt;username&amp;gt;/.pyenv/shims/python&amp;#39; was not built with a shared library.
reticulate can only bind to copies of Python built with &amp;#39;--enable-shared&amp;#39;.
Execution halted
Error : Failed to render content/post/&amp;lt;name_of_post&amp;gt;/index.en.Rmd&lt;/code>&lt;/pre>
&lt;ol start="4" style="list-style-type: decimal">
&lt;li>&lt;p>This just means I must build a version of python with the &lt;code>--enable-shared&lt;/code> flag. I do this using &lt;code>pyenv&lt;/code>.&lt;/p>&lt;/li>
&lt;li>&lt;p>First, choose a version of python that you want to use. You can do this by going to the terminal and typing&lt;/p>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> pyenv install --list&lt;/code>&lt;/pre>
&lt;ol start="6" style="list-style-type: decimal">
&lt;li>This should show you a long output, some of them will be python versions, as shown below:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> ...
3.10.1
3.10.2
3.10.3
3.10.4
3.10.5
3.10.6
3.10.7
3.10.8
3.10.9
3.10.10
3.11.0
...
&lt;/code>&lt;/pre>
&lt;ol start="7" style="list-style-type: decimal">
&lt;li>Choose an appropriate version and use the command below to install said version, like so (in the example below, I choose to install 3.11.0):&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> env PYTHON_CONFIGURE_OPTS=&amp;quot;--enable-shared&amp;quot; pyenv install 3.11.0&lt;/code>&lt;/pre>
&lt;ol start="8" style="list-style-type: decimal">
&lt;li>In the previous step, note the &lt;code>--enable-shared&lt;/code> option has now been added&lt;/li>
&lt;li>We now want to set this Python version to be the global Python version. Type the following command (replace 3.11.0 in the command below with the version you installed):&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> pyenv global 3.11.0&lt;/code>&lt;/pre>
&lt;ol start="10" style="list-style-type: decimal">
&lt;li>You can also check if the global version set is the correct version using the following command:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> pyenv versions&lt;/code>&lt;/pre>
&lt;ol start="10" style="list-style-type: decimal">
&lt;li>&lt;p>If you’re using python packages (i.e. &lt;code>numpy&lt;/code>, &lt;code>pandas&lt;/code>, etc.) in your code chunks, make sure to install them first (i.e. by using &lt;code>pip3 install numpy&lt;/code>, &lt;code>pip3 install pandas&lt;/code>, etc. in the terminal)&lt;/p>&lt;/li>
&lt;li>&lt;p>With all of this setup, you should no longer see the error above when you knit Rmarkdown documents with Python code chunks in them.&lt;/p>&lt;/li>
&lt;/ol></description></item></channel></rss>