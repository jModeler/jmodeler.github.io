<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on The Journeyman Modeler</title><link>http://jmodeler.github.io/posts/</link><description>Recent content in Posts on The Journeyman Modeler</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 18 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://jmodeler.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Omitted Variables Bias -- Simple Example Proof</title><link>http://jmodeler.github.io/posts/2025-05-18-omitted-variables-bias-simple-example-proof/</link><pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/2025-05-18-omitted-variables-bias-simple-example-proof/</guid><description>&lt;p>In this post, I derive the expression in equation (4) of (&lt;a href="#ref-rossi2014iv" >Rossi 2014&lt;/a>), as shown in the screenshot below.
&lt;img src="http://jmodeler.github.io/posts/2025-05-18-omitted-variables-bias-simple-example-proof/eq_4.png" alt="Equation 4 from Rossi Paper">&lt;/p>
&lt;h3 id="setup">
 Setup
 &lt;a class="heading-link" href="#setup">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h3>
&lt;p>The author provides the following system of regression equations:&lt;/p>
&lt;p>&lt;code>\begin{align} y = &amp;amp; \beta x + \alpha_y v + \epsilon_y \tag{1} \\ x = &amp;amp; \alpha_x v + \epsilon_x \tag{2} \\ E(\epsilon_y|x, v) = &amp;amp; 0 \,\, \&amp;amp; \,\, E(\epsilon_x|x, v) = 0 \,\, \&amp;amp; \,\, \epsilon_y \perp\!\!\!\perp \epsilon_x \tag{3} \end{align}&lt;/code>&lt;/p></description></item><item><title>Inverse of a Transposed Matrix</title><link>http://jmodeler.github.io/posts/2025-05-12-inverse-of-a-transposed-matrix/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/2025-05-12-inverse-of-a-transposed-matrix/</guid><description>&lt;p>In this post I attempt to prove a very simple identity, that will be used in a later post.&lt;/p>
&lt;p>I want to prove that for a square, non-singular matrix &lt;code>\(A\)&lt;/code>, we have (in the steps below, &lt;code>\(I\)&lt;/code> is the identity matrix):&lt;/p>
&lt;p>&lt;code>\begin{align} (A^T)^{-1} = (A^{-1})^{T} \end{align}&lt;/code>&lt;/p>
&lt;p>Let &lt;code>\((A^T)^{-1} = B\)&lt;/code>, we have
&lt;code>\begin{align} (A^T)^{-1} &amp;amp; = B \\ \implies (A^T)^{-1} A^T &amp;amp; = B A^T \\ \implies I &amp;amp; = B A^T \tag{1} \\ \implies I^T &amp;amp; = (BA^T)^T \\ \implies I &amp;amp; = AB^T \tag{2} \\ \implies A^{-1}I &amp;amp; = A^{-1}AB^T \\ \implies A^{-1} &amp;amp; = B^T \\ \implies (A^{-1})^T &amp;amp; = (B^T)^T \\ \implies (A^{-1})^T &amp;amp; = B \\ \implies (A^{-1})^T &amp;amp; = B = (A^T)^{-1} \end{align}&lt;/code>&lt;/p></description></item><item><title>Calling Rust Functions from R using extendr - II</title><link>http://jmodeler.github.io/posts/2025-05-03-calling-rust-functions-from-r-using-extendr-ii/</link><pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/2025-05-03-calling-rust-functions-from-r-using-extendr-ii/</guid><description>&lt;p>In a &lt;a href="https://jmodeler.github.io/posts/2025-04-27-calling-rust-functions-from-r-using-extendr/" class="external-link" target="_blank" rel="noopener">previous post&lt;/a>, I called a Rust function from R and did a speed test of that function against an equivalent R function. At the end of the post, I mentioned that we could use &lt;a href="https://en.wikipedia.org/wiki/Memoization" class="external-link" target="_blank" rel="noopener">memoization&lt;/a> to speed up the R function. I proceed to do that here.&lt;/p>
&lt;p>The speed test in the previous post might have been unfair to R, since it is well known that &lt;a href="https://stackoverflow.com/questions/6807068/why-is-my-recursive-function-so-slow-in-r" class="external-link" target="_blank" rel="noopener">R is not good with recursive function calls&lt;/a>. I now create a memoized version of the R function here:&lt;/p></description></item><item><title>Calling Rust Functions from R using extendr</title><link>http://jmodeler.github.io/posts/2025-04-27-calling-rust-functions-from-r-using-extendr/</link><pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/2025-04-27-calling-rust-functions-from-r-using-extendr/</guid><description>&lt;p>In this post, I attempt to call a &lt;a href="https://www.rust-lang.org/" class="external-link" target="_blank" rel="noopener">Rust&lt;/a> function from an &lt;a href="https://cran.r-project.org/" class="external-link" target="_blank" rel="noopener">R&lt;/a> session and compare the runtime of that function to a similar function written in R.&lt;/p>
&lt;p>The &lt;a href="https://github.com/extendr/rextendr" class="external-link" target="_blank" rel="noopener">rextendr&lt;/a> R library allows us to call rust functions from an R session. As the repository linked above mentions, you &amp;ldquo;&lt;a href="https://cran.r-project.org/" class="external-link" target="_blank" rel="noopener">need to setup a working Rust toolchain&lt;/a>&amp;rdquo;.&lt;/p>
&lt;p>I write a Rust function to get the &lt;code>\(n^{th}\)&lt;/code> &lt;a href="https://en.wikipedia.org/wiki/Fibonacci_sequence" class="external-link" target="_blank" rel="noopener">Fibonacci term&lt;/a>, and then compile it using the &lt;code>rust_source()&lt;/code> function from the &lt;code>rextendr&lt;/code> library, as shown below:&lt;/p></description></item><item><title>Sample Size and Effect Size</title><link>http://jmodeler.github.io/posts/2025-04-26-sample-size-and-effect-size/</link><pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/2025-04-26-sample-size-and-effect-size/</guid><description>&lt;p>In this post, I show how the sample size of the treatment and control samples in an A/B test affect the impact size. The assumption here is that the population variances of both samples are known, and the responses of the individual units in these samples are Independent and Identically Distributed (IID), which simplifies this demonstration.&lt;/p>
&lt;h3 id="setup">
 Setup
 &lt;a class="heading-link" href="#setup">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h3>
&lt;p>Let&amp;rsquo;s say the responses in the control sample are &lt;code>\(X_i \sim N(\mu_X, \sigma_X^2)\)&lt;/code> and the responses in the treatment sample are &lt;code>\(Y_i \sim N(\mu_Y, \sigma_Y^2)\)&lt;/code>. We want to check if the mean response of the treatment is significantly different from the mean response of the control sample (i.e. we want to check if &lt;code>\(\bar{Y} - \bar{X}\)&lt;/code> is statistically different from &lt;code>\(0\)&lt;/code>).&lt;/p></description></item><item><title>Distribution Of The Negative of A Normally Distributed Random Variable</title><link>http://jmodeler.github.io/posts/negative-normal-rv/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/negative-normal-rv/</guid><description>&lt;p>This post derives the distribution for an random variable that appears in the derivation of a &lt;a href="https://jmodeler.github.io/posts/2025-04-26-sample-size-and-effect-size/" class="external-link" target="_blank" rel="noopener">result in another post&lt;/a>.&lt;/p>
&lt;p>In this post, I derive the distribution of the negative of a normally distributed random variable. Let&amp;rsquo;s say we have &lt;code>\(X \sim N(\mu, \sigma^2)\)&lt;/code>, and we want to find the distribution of &lt;code>\(Y=-X\)&lt;/code>.&lt;/p>
&lt;p>I start with the identity:
&lt;code>\begin{align} P(Y \le y) = P(-X \le y) = P(X \ge -y) = 1 - P(X \le -y) \end{align}&lt;/code>&lt;/p></description></item><item><title>Distribution of the Sample Mean of IID Normal Random Variables</title><link>http://jmodeler.github.io/posts/distribution-sample-mean/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/distribution-sample-mean/</guid><description>&lt;p>In this post I derive a result that will be used in &lt;a href="https://jmodeler.github.io/posts/2025-04-26-sample-size-and-effect-size/" class="external-link" target="_blank" rel="noopener">another post&lt;/a>.&lt;/p>
&lt;p>Say we have Independent and Identically Distributed (IID) Normal random variables &lt;code>\(X_i \sim N(\mu, \sigma^2)\)&lt;/code>, and we have&lt;/p>
&lt;p>&lt;code>\begin{align} \bar{X} = \frac{1}{n}\sum^{n}_{i=1} X_i \end{align}&lt;/code>&lt;/p>
&lt;p>We want the distribution of &lt;code>\(\bar{X}\)&lt;/code>.&lt;/p>
&lt;p>From a &lt;a href="https://en.wikipedia.org/wiki/Sum_of_normally_distributed_random_variables" class="external-link" target="_blank" rel="noopener">standard result&lt;/a>, &lt;code>\(\bar{X}\)&lt;/code> is also Normally distributed. Once we have the mean and variance of &lt;code>\(\bar{X}\)&lt;/code>, we can completely specify its distribution.&lt;/p>
&lt;p>For the mean of &lt;code>\(\bar{X}\)&lt;/code>, note that &lt;code>\(E(X_i) = \mu\)&lt;/code> we then have:
&lt;code>\begin{align} E(\bar{X}) = &amp;amp; \frac{1}{n} E\left(\sum^{n}_{i=1} X_i \right) \\ = &amp;amp; \frac{1}{n} \left(\sum^{n}_{i=1} E(X_i) \right) \\ = &amp;amp; \frac{1}{n} n\mu = \mu \end{align}&lt;/code>&lt;/p></description></item><item><title>A Summation Formula</title><link>http://jmodeler.github.io/posts/a-summation-formula/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/a-summation-formula/</guid><description>&lt;p>This post derives a closed form solution for particular sum that appears in the derivation of a result in &lt;a href="https://jmodeler.github.io/posts/distribution-sample-mean/" class="external-link" target="_blank" rel="noopener">another post&lt;/a>.&lt;/p>
&lt;p>Say we have real numbers &lt;code>\(X_i\)&lt;/code> such that
&lt;code>\begin{align} X_i = x \,\, \forall i \tag{1} \end{align}&lt;/code>&lt;/p>
&lt;p>And we want to find the sum
&lt;code>\begin{align} \mathop{\sum\sum}_{\substack{i \ne j}} X_i X_j \,\,\,\, i,j \in {1, 2, \dots , n} \tag{2} \end{align}&lt;/code>&lt;/p>
&lt;p>From (1), the sum in (2) boils down to:
&lt;code>\begin{align} \mathop{\sum\sum}_{\substack{i \ne j}} x^2 \tag{3} \end{align}&lt;/code>&lt;/p></description></item><item><title>Upscaling a Movie Poster</title><link>http://jmodeler.github.io/posts/upscaling-a-movie-poster/</link><pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/upscaling-a-movie-poster/</guid><description>&lt;p>&lt;strong>TL;DR:&lt;/strong> I attempt to upscale a low resolution movie poster using the &lt;a href="https://pypi.org/project/super-image/#pre-trained-models" class="external-link" target="_blank" rel="noopener">super_image&lt;/a> python package. Though overall the image looks sharper, the text in the upscaled poster is not too clear.&lt;/p>
&lt;ol>
&lt;li>I have a poster of a movie released in 1962, it is not super high resolution:&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="http://jmodeler.github.io/posts/upscaling-a-movie-poster/Gundamma_Katha.jpeg" alt="gk_original">&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>I wanted to see if I could upscale this poster using &lt;a href="https://pypi.org/project/super-image/#pre-trained-models" class="external-link" target="_blank" rel="noopener">super_image&lt;/a>, a freely available python package that contains various image upscaling models.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I first install the package using &lt;code>pip install super_image&lt;/code>, the python version I&amp;rsquo;m using is 3.8.16, as setup in a &lt;a href="https://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/" class="external-link" target="_blank" rel="noopener">previous post&lt;/a>. I also installed the &lt;a href="https://pypi.org/project/pillow/" class="external-link" target="_blank" rel="noopener">pillow package&lt;/a> for image processing help and &lt;a href="https://pypi.org/project/ipywidgets/" class="external-link" target="_blank" rel="noopener">ipywidgets&lt;/a> for interactive widgets in Jupyter notebooks.&lt;/p></description></item><item><title>Making Terminal in RStudio Cooler (via ohmyzsh)</title><link>http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/</guid><description>&lt;p>I&amp;rsquo;ve been using &lt;a href="https://ohmyz.sh/" class="external-link" target="_blank" rel="noopener">ohmyzsh&lt;/a> with the &lt;a href="https://github.com/romkatv/powerlevel10k" class="external-link" target="_blank" rel="noopener">powerlevel10k&lt;/a> theme to enhance my terminal experience, as I find myself spending more time on it while working on a few projects. A screeshot of this &amp;ldquo;enhanced&amp;rdquo; terminal is shown below:
&lt;img src="http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/terminal_ohmyzsh_p10k.png" alt="terminal_with_ohmyzsh_powerlevel10k">&lt;/p>
&lt;p>I was wondering if I could get the terminal within &lt;a href="https://posit.co/products/open-source/rstudio/" class="external-link" target="_blank" rel="noopener">RStudio&lt;/a> to use the same theme. Turns out that can be done, by following the steps below (Note that these steps are applicable to RStudio &lt;strong>version 2022.12.0+353 &amp;ldquo;Elsbeth Geranium&amp;rdquo; Release (7d165dcfc1b6d300eb247738db2c7076234f6ef0, 2022-12-03) for macOS&lt;/strong>. These steps also assume that you&amp;rsquo;ve already installed ohmyzsh and the powerlevel10k theme. If not, please follow the instructions &lt;a href="https://v-char.medium.com/now-let-customize-your-native-macos-terminal-with-oh-my-zsh-and-powerlevel10k-b48b9c30d39f" class="external-link" target="_blank" rel="noopener">here&lt;/a> first):&lt;/p></description></item><item><title>Resolving Errors When Loading the lldb Debugger</title><link>http://jmodeler.github.io/posts/resolving-errors-when-loading-the-lldb-debugger/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-errors-when-loading-the-lldb-debugger/</guid><description>&lt;p>From time to time, I work with &lt;code>C&lt;/code> code, and I use the &lt;code>lldb&lt;/code> debugger to step through the code. Recently, after a Mac OS update, I started seeing this error when attempting to start the lldb debugger in terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">$ lldb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Traceback &lt;span class="o">(&lt;/span>most recent call last&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;&amp;lt;string&amp;gt;&amp;#34;&lt;/span>, line 1, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;/usr/local/Cellar/llvm/15.0.7_1/libexec/python3.11/site-packages/lldb/__init__.py&amp;#34;&lt;/span>, line 96, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> import six
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ModuleNotFoundError: No module named &lt;span class="s1">&amp;#39;six&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The error message says that a module (&lt;code>six&lt;/code>) is missing. The other issue, is that this module is missing on a version of python that is &lt;em>not&lt;/em> the global version set by &lt;code>pyenv&lt;/code>. I check the versions of pyenv on my system:&lt;/p></description></item><item><title>Resolving Install Errors for the lightweight_mmm Python Package</title><link>http://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/</guid><description>&lt;p>To experiment with different specifications of a marketing mix model, I tried installing the &lt;a href="https://github.com/google/lightweight_mmm" class="external-link" target="_blank" rel="noopener">lightweight_mmm&lt;/a> Python package from Google. When using the standard &lt;code>pip3 install lightweight_mmm&lt;/code> command in terminal, I was hitting this error:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl"> × Getting requirements to build wheel did not run successfully.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ &lt;span class="nb">exit&lt;/span> code: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ╰─&amp;gt; &lt;span class="o">[&lt;/span>&lt;span class="m">66&lt;/span> lines of output&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> The Meson build system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: 0.62.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source dir: /private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-install-yc6ribm7/scipy_ae66ccfb8522422ab91e65b44570f273
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Build dir: /private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-install-yc6ribm7/scipy_ae66ccfb8522422ab91e65b44570f273/.mesonpy-ur2kyhcf/build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Build type: native build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Project name: SciPy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Project version: 1.9.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C compiler &lt;span class="k">for&lt;/span> the host machine: cc &lt;span class="o">(&lt;/span>clang 14.0.0 &lt;span class="s2">&amp;#34;Apple clang version 14.0.0 (clang-1400.0.29.202)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C linker &lt;span class="k">for&lt;/span> the host machine: cc ld64 820.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C++ compiler &lt;span class="k">for&lt;/span> the host machine: c++ &lt;span class="o">(&lt;/span>clang 14.0.0 &lt;span class="s2">&amp;#34;Apple clang version 14.0.0 (clang-1400.0.29.202)&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> C++ linker &lt;span class="k">for&lt;/span> the host machine: c++ ld64 820.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Host machine cpu family: x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Host machine cpu: x86_64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compiler &lt;span class="k">for&lt;/span> C supports arguments -Wno-unused-but-set-variable: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Library m found: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Fortran compiler &lt;span class="k">for&lt;/span> the host machine: gfortran &lt;span class="o">(&lt;/span>gcc 8.2.0 &lt;span class="s2">&amp;#34;GNU Fortran (GCC) 8.2.0&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Fortran linker &lt;span class="k">for&lt;/span> the host machine: gfortran ld64 820.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Program cython found: YES &lt;span class="o">(&lt;/span>/private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-build-env-gddbg9u0/overlay/bin/cython&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Program pythran found: YES &lt;span class="o">(&lt;/span>/private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-build-env-gddbg9u0/overlay/bin/pythran&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Program cp found: YES &lt;span class="o">(&lt;/span>/bin/cp&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Program python found: YES &lt;span class="o">(&lt;/span>/Users/&amp;lt;username&amp;gt;/.pyenv/versions/3.11.2/bin/python3.11&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Found pkg-config: /usr/local/bin/pkg-config &lt;span class="o">(&lt;/span>0.29.2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Library npymath found: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Library npyrandom found: YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Found CMake: /usr/local/bin/cmake &lt;span class="o">(&lt;/span>3.26.0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Run-time dependency openblas found: NO &lt;span class="o">(&lt;/span>tried pkgconfig, framework and cmake&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Run-time dependency openblas found: NO &lt;span class="o">(&lt;/span>tried pkgconfig, framework and cmake&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ../../scipy/meson.build:130:0: ERROR: Dependency &lt;span class="s2">&amp;#34;OpenBLAS&amp;#34;&lt;/span> not found, tried pkgconfig, framework and cmake
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I tried to install &lt;code>openblas&lt;/code> using homebrew, but it was already installed:&lt;/p></description></item><item><title>Resolving Errors when Creating Your First MineRL Agent</title><link>http://jmodeler.github.io/posts/resolving-errors-when-creating-your-first-minerl-agent/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-errors-when-creating-your-first-minerl-agent/</guid><description>&lt;p>In this post, I lay out the steps to follow to resolve the errors you see when creating your &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/first_agent.html" class="external-link" target="_blank" rel="noopener">first MineRL agent&lt;/a> on a macOS. This is a continuation of &lt;a href="https://jmodeler.github.io/posts/resolving-install-errors-with-minerl/" class="external-link" target="_blank" rel="noopener">this post&lt;/a>, which looks at resolving install errors on the &lt;code>minerl&lt;/code> package.&lt;/p>
&lt;p>I borrow heavily from &lt;a href="https://github.com/minerllabs/minerl/issues/659#issuecomment-1306635414" class="external-link" target="_blank" rel="noopener">this github issue comment&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Clone the repository using the terminal command below&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl"> git clone https://github.com/minerllabs/minerl.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a &lt;code>minerl&lt;/code> directory. Make sure that the path to the cloned repository does not have spaces in it (i.e. the path should &lt;strong>not&lt;/strong> be &lt;code>/Users/&amp;lt;username&amp;gt;/minerl folder/minerl&lt;/code> &amp;ndash; you will get &lt;code>file not found&lt;/code> errors in the next few steps otherwise)&lt;/p></description></item><item><title>Resolving Install Errors with MineRL</title><link>http://jmodeler.github.io/posts/resolving-install-errors-with-minerl/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-with-minerl/</guid><description>&lt;p>In this post, I&amp;rsquo;ll resolve an error that one might face when trying to install the &lt;code>minerl&lt;/code> Python package. The instructions to install this package can be &lt;a href="https://minerl.readthedocs.io/en/latest/tutorials/index.html" class="external-link" target="_blank" rel="noopener">found here&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>Using the instructions above, when I used the install command (&lt;code>pip3 install git+https://github.com/minerllabs/minerl&lt;/code>), I got the following error (only the relevant part is shown here):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl"> Note: Some input files use or override a deprecated API.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Note: Recompile with -Xlint:deprecation &lt;span class="k">for&lt;/span> details.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Note: Some input files use unchecked or unsafe operations.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Note: Recompile with -Xlint:unchecked &lt;span class="k">for&lt;/span> details.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">100&lt;/span> errors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> only showing the first &lt;span class="m">100&lt;/span> errors, of &lt;span class="m">2866&lt;/span> total&lt;span class="p">;&lt;/span> use -Xmaxerrs &lt;span class="k">if&lt;/span> you would like to see more
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; Task :compileJava FAILED
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FAILURE: Build failed with an exception.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * What went wrong:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Execution failed &lt;span class="k">for&lt;/span> task &lt;span class="s1">&amp;#39;:compileJava&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;gt; Compilation failed&lt;span class="p">;&lt;/span> see the compiler error output &lt;span class="k">for&lt;/span> details.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * Try:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * Get more &lt;span class="nb">help&lt;/span> at https://help.gradle.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Use &lt;span class="s1">&amp;#39;--warning-mode all&amp;#39;&lt;/span> to show the individual deprecation warnings.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> See https://docs.gradle.org/6.8.1/userguide/command_line_interface.html#sec:command_line_warnings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BUILD FAILED in 21s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">10&lt;/span> actionable tasks: &lt;span class="m">10&lt;/span> executed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Traceback &lt;span class="o">(&lt;/span>most recent call last&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;&amp;lt;string&amp;gt;&amp;#34;&lt;/span>, line 2, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;&amp;lt;pip-setuptools-caller&amp;gt;&amp;#34;&lt;/span>, line 34, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;/private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-req-build-9xj7s1on/setup.py&amp;#34;&lt;/span>, line 214, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> prep_mcp&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;/private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-req-build-9xj7s1on/setup.py&amp;#34;&lt;/span>, line 198, in prep_mcp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> subprocess.check_call&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;{} clean build shadowJar&amp;#39;&lt;/span>.format&lt;span class="o">(&lt;/span>gradlew&lt;span class="o">)&lt;/span>.split&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="nv">cwd&lt;/span>&lt;span class="o">=&lt;/span>workdir&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s2">&amp;#34;/Users/&amp;lt;username&amp;gt;/.pyenv/versions/3.11.2/lib/python3.11/subprocess.py&amp;#34;&lt;/span>, line 413, in check_call
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> raise CalledProcessError&lt;span class="o">(&lt;/span>retcode, cmd&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> subprocess.CalledProcessError: Command &lt;span class="s1">&amp;#39;[&amp;#39;&lt;/span>./gradlew&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>clean&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>build&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>shadowJar&lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span> returned non-zero &lt;span class="nb">exit&lt;/span> status 1.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>end of output&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> note: This error originates from a subprocess, and is likely not a problem with pip.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">error: metadata-generation-failed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>Searching for the error message (&lt;code>error: metadata-generation-failed&lt;/code>) took me to a bunch of websites that provided other options to try:&lt;/p></description></item><item><title>Distributions with Thin and Fat Tails</title><link>http://jmodeler.github.io/posts/distributions-with-thin-and-fat-tails/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/distributions-with-thin-and-fat-tails/</guid><description>&lt;p>In this post, we’ll explore a key difference between thin and fat tailed distributions, and what this means in the world of insurance and risk management. These results are from Chapter 3 of Taleb (&lt;a href="#ref-taleb2020fattails" >2020&lt;/a>).&lt;/p>
&lt;p>In the world of thin tails (i.e. data that are Gaussian distributed), as the sample of data gets larger, no single data point can change the properties of the entire sample (Taleb calls this “Mediocristan”). Conversely, in data from fat tailed distributions (i.e. data from a distribution whose tail decays like a &lt;a href="https://en.wikipedia.org/wiki/Power_law" class="external-link" target="_blank" rel="noopener">power law&lt;/a>), a single data point (or rare events) can disproportionately impact the properties of a sample (Taleb calls this “Extremistan”). The next section explores data from a standard normal distribution, and how likely it is to observe a tail event in such data.&lt;/p></description></item><item><title>Setting up Python to Run on Rmarkdown</title><link>http://jmodeler.github.io/posts/setting-up-python-to-run-on-rmarkdown/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/setting-up-python-to-run-on-rmarkdown/</guid><description>&lt;p>I use the &lt;a href="https://themes.gohugo.io/themes/hugo-coder/" class="external-link" target="_blank" rel="noopener">Hugo Coder template&lt;/a> along with Rstudio’s &lt;a href="https://github.com/rstudio/blogdown" class="external-link" target="_blank" rel="noopener">Blogdown&lt;/a> package to generate and deploy this website to &lt;a href="https://pages.github.com/" class="external-link" target="_blank" rel="noopener">github pages&lt;/a>. I use this setup to generate blog posts (via &lt;a href="https://rmarkdown.rstudio.com/" class="external-link" target="_blank" rel="noopener">Rmarkdown&lt;/a>) that render &lt;code>\(\LaTeX\)&lt;/code> math and output from R code.&lt;/p>
&lt;p>Sometimes, I’d like to run Python code inside Rmarkdown too, and this is &lt;a href="https://bookdown.org/yihui/rmarkdown-cookbook/eng-python.html" class="external-link" target="_blank" rel="noopener">supported&lt;/a>, via the &lt;a href="https://cran.r-project.org/web/packages/reticulate/index.html" class="external-link" target="_blank" rel="noopener">reticulate&lt;/a> package. That said, the following steps need to be followed to make sure everything runs smoothly (all of these steps worked on a macOS Ventura operating system)&lt;/p></description></item><item><title>Numerical Integration with Sparse Grids</title><link>http://jmodeler.github.io/posts/numerical-integration-with-sparse-grids/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/numerical-integration-with-sparse-grids/</guid><description>&lt;p>I recently read a paper (&lt;a href="#ref-heiss2008likelihood" >Heiss and Winschel 2008&lt;/a>) that advocated the use of certain techniques (Sparse Grids, SG henceforth) in numerical integration to calculate likelihood functions, as opposed to using Monte Carlo (MC henceforth) methods for the same. While approximating integrals with MC methods are simpler to implement, they might lead to integral values with considerable simulation error (&lt;a href="#ref-skrainka2011high" >Skrainka and Judd 2011&lt;/a>). This post attempts to demonstrate the claim in Skrainka and Judd (&lt;a href="#ref-skrainka2011high" >2011&lt;/a>) using two very simple integrals, to which we already know the value. I attempt to compare the outcomes from using MC and SG.&lt;/p></description></item><item><title>The Homotopy Principle: Simple Examples</title><link>http://jmodeler.github.io/posts/the-homotopy-principle-simple-examples/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/the-homotopy-principle-simple-examples/</guid><description>&lt;p>This post presents 2 simple examples of the homotopy principle applied to (fairly easy) linear and nonlinear systems of equations. At a very abstract level, given a system of equations for which a solution is needed, we convert this system to one whose solution we already know (or is easy to find out), and then bend this system till we get the solution to the original set of equations. These methods have very broad applications (&lt;a href="#ref-garciapathways" >Garcia and Zangwill 1981&lt;/a>), and have been applied in the context of finding equlibria in Static Games (&lt;a href="#ref-Bajari2010" >Bajari et al. 2010&lt;/a>) and Dynamic Games (&lt;a href="#ref-Borkovsky2010" >Borkovsky, Doraszelski, and Kryukov 2010&lt;/a>).&lt;/p></description></item><item><title>Completing Projects at Work</title><link>http://jmodeler.github.io/posts/completing-projects-at-work/</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/completing-projects-at-work/</guid><description>&lt;p>This is a post inspired by a conversation I had with a colleague, Ryan. Over a very short period, he had completed an impressive portfolio of work projects, and always had something better in the pipeline. I asked him what he did when starting on anything, and he very kindly shared his method to get (most) things done at work (and in life, where applicable). In the following post, anything &lt;strong>bold&lt;/strong> is input from him.&lt;/p></description></item></channel></rss>