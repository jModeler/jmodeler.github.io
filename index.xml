<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Journeyman Modeler</title><link>http://jmodeler.github.io/</link><description>Recent content on The Journeyman Modeler</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 30 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://jmodeler.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Resolving Install Errors with NVlabs imaginaire</title><link>http://jmodeler.github.io/posts/resolving-install-errors-with-nvlabs-imaginaire/</link><pubDate>Tue, 30 Jul 2024 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-with-nvlabs-imaginaire/</guid><description>TL;DR: I need to install the NVlabs imaginaire package for a project (more details in a later post). I walk through the installation steps and how to resolve any errors you might encounter.
I need to install the NVlabs imaginaire package, I follow the instructions here.
As explained in a previous post, I use pyenv to handle various versions of python and I&amp;rsquo;m currently using version 3.10.5:
$ pyenv versions system * 3.</description></item><item><title>About</title><link>http://jmodeler.github.io/about/</link><pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/about/</guid><description>I’m curious about algorithms and methods at the intersection of Economics, Statistics and Computer Science. I will be adding posts which encapsulate my learnings in this space.
Built with Hugo. Learn more and contribute on GitHub.</description></item><item><title>Upscaling a Movie Poster</title><link>http://jmodeler.github.io/posts/upscaling-a-movie-poster/</link><pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/upscaling-a-movie-poster/</guid><description>TL;DR: I attempt to upscale a low resolution movie poster using the super_image python package. Though overall the image looks sharper, the text in the upscaled poster is not too clear.
I have a poster of a movie released in 1962, it is not super high resolution: I wanted to see if I could upscale this poster using super_image, a freely available python package that contains various image upscaling models.</description></item><item><title>Making Terminal in RStudio Cooler (via ohmyzsh)</title><link>http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/making-terminal-in-rstudio-cooler-via-ohmyzsh/</guid><description>I&amp;rsquo;ve been using ohmyzsh with the powerlevel10k theme to enhance my terminal experience, as I find myself spending more time on it while working on a few projects. A screeshot of this &amp;ldquo;enhanced&amp;rdquo; terminal is shown below: I was wondering if I could get the terminal within RStudio to use the same theme. Turns out that can be done, by following the steps below (Note that these steps are applicable to RStudio version 2022.</description></item><item><title>Resolving Errors When Loading the lldb Debugger</title><link>http://jmodeler.github.io/posts/resolving-errors-when-loading-the-lldb-debugger/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-errors-when-loading-the-lldb-debugger/</guid><description>From time to time, I work with C code, and I use the lldb debugger to step through the code. Recently, after a Mac OS update, I started seeing this error when attempting to start the lldb debugger in terminal:
$ lldb Traceback (most recent call last): File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/usr/local/Cellar/llvm/15.0.7_1/libexec/python3.11/site-packages/lldb/__init__.py&amp;#34;, line 96, in &amp;lt;module&amp;gt; import six ModuleNotFoundError: No module named &amp;#39;six&amp;#39; The error message says that a module (six) is missing.</description></item><item><title>Resolving Install Errors for the lightweight_mmm Python Package</title><link>http://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-for-the-lightweight-mmm-python-package/</guid><description>To experiment with different specifications of a marketing mix model, I tried installing the lightweight_mmm Python package from Google. When using the standard pip3 install lightweight_mmm command in terminal, I was hitting this error:
× Getting requirements to build wheel did not run successfully. │ exit code: 1 ╰─&amp;gt; [66 lines of output] The Meson build system Version: 0.62.2 Source dir: /private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-install-yc6ribm7/scipy_ae66ccfb8522422ab91e65b44570f273 Build dir: /private/var/folders/ly/3d_s7td56qb7rn4qc2c6tmvm0000gn/T/pip-install-yc6ribm7/scipy_ae66ccfb8522422ab91e65b44570f273/.mesonpy-ur2kyhcf/build Build type: native build Project name: SciPy Project version: 1.</description></item><item><title>Resolving Errors when Creating Your First MineRL Agent</title><link>http://jmodeler.github.io/posts/resolving-errors-when-creating-your-first-minerl-agent/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-errors-when-creating-your-first-minerl-agent/</guid><description>In this post, I lay out the steps to follow to resolve the errors you see when creating your first MineRL agent on a macOS. This is a continuation of this post, which looks at resolving install errors on the minerl package.
I borrow heavily from this github issue comment.
Clone the repository using the terminal command below
git clone https://github.com/minerllabs/minerl.git This will create a minerl directory. Make sure that the path to the cloned repository does not have spaces in it (i.</description></item><item><title>Resolving Install Errors with MineRL</title><link>http://jmodeler.github.io/posts/resolving-install-errors-with-minerl/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/resolving-install-errors-with-minerl/</guid><description>In this post, I&amp;rsquo;ll resolve an error that one might face when trying to install the minerl Python package. The instructions to install this package can be found here.
Using the instructions above, when I used the install command (pip3 install git+https://github.com/minerllabs/minerl), I got the following error (only the relevant part is shown here): Note: Some input files use or override a deprecated API. Note: Recompile with -Xlint:deprecation for details. Note: Some input files use unchecked or unsafe operations.</description></item><item><title>Distributions with Thin and Fat Tails</title><link>http://jmodeler.github.io/posts/distributions-with-thin-and-fat-tails/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/distributions-with-thin-and-fat-tails/</guid><description>In this post, we’ll explore a key difference between thin and fat tailed distributions, and what this means in the world of insurance and risk management. These results are from Chapter 3 of Taleb (2020).
In the world of thin tails (i.e. data that are Gaussian distributed), as the sample of data gets larger, no single data point can change the properties of the entire sample (Taleb calls this “Mediocristan”). Conversely, in data from fat tailed distributions (i.</description></item><item><title>Setting up Python to Run on Rmarkdown</title><link>http://jmodeler.github.io/posts/setting-up-python-to-run-on-rmarkdown/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/setting-up-python-to-run-on-rmarkdown/</guid><description>I use the Hugo academic template along with Rstudio’s Blogdown package to generate and deploy this website to github pages. I use this setup to generate blog posts (via Rmarkdown) that render \(\LaTeX\) math and output from R code.
Sometimes, I’d like to run Python code inside Rmarkdown too, and this is supported, via the reticulate package. That said, the following steps need to be followed to make sure everything runs smoothly (all of these steps worked on a macOS Ventura operating system)</description></item><item><title>Numerical Integration with Sparse Grids</title><link>http://jmodeler.github.io/posts/numerical-integration-with-sparse-grids/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/numerical-integration-with-sparse-grids/</guid><description>I recently read a paper (Heiss and Winschel 2008) that advocated the use of certain techniques (Sparse Grids, SG henceforth) in numerical integration to calculate likelihood functions, as opposed to using Monte Carlo (MC henceforth) methods for the same. While approximating integrals with MC methods are simpler to implement, they might lead to integral values with considerable simulation error (Skrainka and Judd 2011). This post attempts to demonstrate the claim in Skrainka and Judd (2011) using two very simple integrals, to which we already know the value.</description></item><item><title>The Homotopy Principle: Simple Examples</title><link>http://jmodeler.github.io/posts/the-homotopy-principle-simple-examples/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/the-homotopy-principle-simple-examples/</guid><description>This post presents 2 simple examples of the homotopy principle applied to (fairly easy) linear and nonlinear systems of equations. At a very abstract level, given a system of equations for which a solution is needed, we convert this system to one whose solution we already know (or is easy to find out), and then bend this system till we get the solution to the original set of equations. These methods have very broad applications (Garcia and Zangwill 1981), and have been applied in the context of finding equlibria in Static Games (Bajari et al.</description></item><item><title>Completing Projects at Work</title><link>http://jmodeler.github.io/posts/completing-projects-at-work/</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/posts/completing-projects-at-work/</guid><description>This is a post inspired by a conversation I had with a colleague, Ryan. Over a very short period, he had completed an impressive portfolio of work projects, and always had something better in the pipeline. I asked him what he did when starting on anything, and he very kindly shared his method to get (most) things done at work (and in life, where applicable). In the following post, anything bold is input from him.</description></item><item><title>Autores de Hugo</title><link>http://jmodeler.github.io/autores/autores-de-hugo/</link><pubDate>Thu, 05 Jan 2023 01:15:52 +0100</pubDate><guid>http://jmodeler.github.io/autores/autores-de-hugo/</guid><description/></item><item><title>temas</title><link>http://jmodeler.github.io/categoria/temas/</link><pubDate>Wed, 04 Jan 2023 23:21:18 +0100</pubDate><guid>http://jmodeler.github.io/categoria/temas/</guid><description/></item><item><title>sintaxe</title><link>http://jmodeler.github.io/categoria/sintaxe/</link><pubDate>Wed, 04 Jan 2023 23:21:06 +0100</pubDate><guid>http://jmodeler.github.io/categoria/sintaxe/</guid><description/></item><item><title>Códigos curtos</title><link>http://jmodeler.github.io/tags/shortcodes/_index.pt-br/</link><pubDate>Wed, 04 Jan 2023 11:51:36 +0100</pubDate><guid>http://jmodeler.github.io/tags/shortcodes/_index.pt-br/</guid><description/></item><item><title>Projects</title><link>http://jmodeler.github.io/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://jmodeler.github.io/projects/</guid><description>Nothing to see here&amp;hellip; Move along!</description></item></channel></rss>